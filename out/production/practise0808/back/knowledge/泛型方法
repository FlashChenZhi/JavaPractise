一、 定义泛型方法的规则
 1. 所有泛型方法声明都有一个类型参数声明部分（由尖括号分隔），该类型参数声明部分在方法返回类型之前；
 2. 每一个类型参数声明部分包含一个或多个类型参数，参数间用逗号隔开；
    一个泛型参数，也被称为一个类型变量，是用于指定一个泛型类型名称的标识符
 3. 类型参数能被用来声明返回值类型，并且能作为泛型方法得到的实际参数类型的占位符
 4. 泛型方法体的声明和其他方法一样，注意类型参数只能代表引用型类型，不能是原始类型（像int,double,char的等）

二、泛型类
1. 泛型类的声明和非泛型类的声明类似，除了在类名后面添加了类型参数声明部分
2. 和泛型方法一样，泛型类的类型参数声明部分也包含一个或多个类型参数，参数间用逗号隔开；
3. 一个泛型参数，也被称为一个类型变量，是用于指定一个泛型类型名称的标识符
   因为他们接受一个或多个参数，这些类被称为参数化的类或参数化的类型

说明：<? extends T>和<? super T>的区别
1. <? extends T>表示该通配符所代表的类型是T类型的子类。

2. <? super T>表示该通配符所代表的类型是T类型的父类

三、类型通配符
1. 类型通配符一般是使用?代替具体的类型参数
2. 类型通配符上限通过形如List来定义，如此定义就是通配符泛型值接受Number及其下层子类类型
