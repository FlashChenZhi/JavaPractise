                                                正则表达式
一、基础概念
1. 正则表达式是由一个字符序列形成的搜索模式

2. 当你在文本中搜索数据时，你可以用搜索模式来描述你要查询的内容

3. 正则表达式可以是一个简单的字符，或一个更复杂的模式

4. 正则表达式可用于所有文本搜索和文本替换的操作

二、语法格式
1.      /正则表达式主体/修饰符(可选)
2.      示例：var patt = /runoob/i
3.      说明：/runoob/i  是一个正则表达式
                runoob  是一个正则表达式主体 (用于检索)
                i  是一个修饰符 (搜索不区分大小写)
三、常用字符串方法
1. search() 方法 用于检索字符串中指定的子字符串，或检索与正则表达式相匹配的子字符串，并返回子串的起始位置

2. replace() 方法 用于在字符串中用一些字符替换另一些字符，或替换一个与正则表达式匹配的子串

四、正则表达式修饰符
1.  i：不区分大小写
2.  g：全局匹配（查找所有并非在找到第一个匹配后停止）
3.  m：执行多行匹配
4.  \w：单词字符
5.  \W：非单词字符
6.  \d：数字
7.  \D：非数字
8.  \s：空白字符
9.  \S：非空白字符
10. \b：匹配单词边界
11. \B：匹配非单词边界
12. \0：查找 NULL 字符
13. \n：查找换行符
14. \f：查找换页符
15. \r：查找回车符
16. \t：查找制表符
17. \v：查找垂直制表符
18. \xxx：查找以八进制数 xxx 规定的字符
19. \xdd：查找以十六进制数 dd 规定的字符
20. \uxxxx：查找以十六进制数 xxxx 规定的 Unicode 字符

五、量词和方括号
<一> 量词的定义
1. n+：      匹配任何包含至少一个 n 的字符串
2. n*：      匹配任何包含零个或多个 n 的字符串
3. n?：      匹配任何包含零个或一个 n 的字符串
4. n{X}：    匹配包含 X 个 n 的序列的字符串
5. n{X,}：   X 是一个正整数，前面的模式 n 连续出现至少 X 次时匹配
6. n{X,Y}：  X 和 Y为正整数，前面的模式 n 连续出现至少 X 次，至多 Y 次时匹配
7. n$：      匹配任何结尾为 n 的字符串
8. ^n：      匹配任何开头为 n 的字符串
9. ?=n：     匹配任何其后紧接指定字符串 n 的字符串
10.?!n：     匹配任何其后没有紧接指定字符串 n 的字符串

<二>方括号的作用
1.[abc]：    查找方括号之间的任何字符
2.[^abc]：   查找任何不在方括号之间的字符
3.[0-9]：    查找任何从 0 至 9 的数字
4.[a-z]：    查找任何从小写 a 到小写 z 的字符
5.[A-Z]：    查找任何从大写 A 到大写 Z 的字符
6.[A-z]：    查找任何从大写 A 到小写 z 的字符
7.[adgk]：   查找给定集合内的任何字符
8.[^adgk]：  查找给定集合外的任何字符
9.(red | blue | green)： 查找任何指定的选项



