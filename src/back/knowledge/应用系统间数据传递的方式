                                                应用系统间数据传递的方式
一、数据传输三要素
1. 传输方式
2. 传输协议
3. 数据格式

二、数据传输方式
1.Socket方式
2.FTP /文件共享服务器方式
3.数据库共享数据方式
4.Message方式

三、各传输方式说明
1.Socket方式：典型的 c/s 交互模式
<1>实现原理：
    (1).一台客户机，一台服务器
    (2).服务器提供服务，通过ip地址和端口进行服务访问
    (3).客户机通过连接服务器指定的端口进行消息交互
    (4).服务器和约定了请求报文格式和响应报文格式
    (5).传输协议可以是TCP/UDP 协议，或者是TCP/IP 协议
<2>.主要优势：
    (1). 易于编程：目前java提供了多种框架，屏蔽了底层通信细节以及数据传输转换细节
    (2). 容易控制权限：通过传输层协议http，加密传输的数据，使得安全性提高
    (3). 通用性比较强：无论客户端是.net架构，java，python 都是可以的；尤其是webservice规范，使得服务变得通用
<3>.存在缺陷：
    (1). 服务器和客户端必须同时工作，当服务器端不可用的时候，整个数据交互是不可进行；
    (2). 当传输数据量比较大的时候，严重占用网络带宽，可能导致连接超时，使得在数据量交互的时候，服务变的很不可靠

2. FTP /文件共享服务器方式：
<1>.主要优势：
    (1). 在数据量大的情况下，可以通过文件传输，不会超时，不占用网络带宽
    (2). 方案简单，避免了网络传输，网络协议相关的概念
<2>.存在缺陷：
    (1). 不太适合做实时类的业务
    (2). 必须有共同的文件服务器，文件服务器这里面存在风险。因为文件可能被篡改，删除，或者存在泄密等
    (3). 必须约定文件数据的格式，当改变文件格式的时候，需要各个系统都同步做修改

3.数据库共享方式：(中间表)
<1>.实现原理：
    系统A和系统B通过连接同一个数据库服务器的同一张表进行数据交换；
    当系统A请求系统B处理数据的时候，系统A Insert 一条数据，系统B select 系统A 插入的数据进行处理
<2>.主要优势：
    (1). 相比文件方式传输来说，因为使用的同一个数据库，交互更加简单
    (2). 由于数据库提供相关操作，比如更新，回滚等；交互方式较灵活,且通过数据库的事务机制，可做成可靠性的数据交换
<3>.存在缺陷：
    (1).当连接服务器系统逐渐增多时，由于数据库的连接池有限，导致每个请求连接的系统分配受限，可能导致无可用的数据库连接
    (2).一般情况，来自两个不同公司的系统，不太会开放自己的数据库给对方连接，因为这样会有安全性影响

4.Message方式：
<1>.实现原理：(前提：双方约定好Message消息格式)
    (1).Java消息服务（Java Message Service）是message数据传输的典型的实现方式
    (2).系统A和系统B通过一个消息服务器进行数据交换；
    (3).系统A发送消息到消息服务器，如果系统B订阅系统A发送过来的消息，消息服务器会消息推送给系统B
<2>.主要优势：
    (1).由于jms定义了规范，有很多的开源的消息中间件可选择，而且比较通用，接入起来相对也比较简单
    (2).通过消息方式比较灵活，可以采取同步，异步，可靠性的消息处理，消息中间件也可以独立出来部署
<3>.存在缺陷：
    (1).学习jms相关的基础知识，消息中间件的具体配置，以及实现的细节对于开发人员来说还是有一点学习成本的
    (2).在大数据量的情况下，消息可能会产生积压，导致消息延迟，消息丢失，甚至消息中间件崩溃

四、系统间数据传输的情景应用
1.实现步骤：
    A 系统A先保存文件到文件服务器。
    B 系统A 通过webservice
        调用系统B提供的服务器，把需要处理的文件名发送到系统B；
        由于文件很大，需要处理很长时间，所以B不及时处理文件，而是保存需要处理的文件名到数据库；
        通过后台定时调度机制去处理；所以B接收请求成功，立刻返回系统A成功

    C 系统B 定时查询数据库记录，通过记录查找文件路径，找到文件进行处理，这个过程很长

    D 系统B 处理完成之后发送消息给系统A，告知系统A文件处理完成

    E 系统A 接收到系统B请求来的消息，进行展示任务结果

2.具体交互流程，请参考图片文件 (文件路径：/images/paint/系统间数据传递方式.jpg)
